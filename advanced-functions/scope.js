/*
    Функции как области видимости
    Функция в JavaScript создает область видимости, поэтому переменная, определенная исключительно внутри функции,
    не может быть доступна извне функции или внутри других функций (функция может быть использована в качестве замыкания).

    https://flagman.top/about-business/php-i-t-p-uzelki/kontekst-vypolneniya-i-oblast-vidimosti-v-javascript

    - оператор окружающей функции начинается с (function… в противоположность простому function…. ,
    т.е. функция трактуется как функциональное выражение (function expression)

    - имя foo не связано с окружающей областью видимости, а связано только со своей собственной функцией.
    Иными словами, (function foo(){ .. }) как выражение означает, что идентификатор foo может быть найден
    только в области видимости, которая обозначена { .. }, но не во внешней области видимости.
    
    Сокрытие имени foo внутри себя означает, что оно не будет неоправданно загрязнять окружающую область видимости.

    Примечание: Самый легкий путь отличить объявление от выражения — позиция слова «function»
     в операторе (не только строка, но и отдельный оператор). Если «function» — самое первое,
     что стоит в операторе, то это объявление функции. Иначе, это функциональное выражение.
 */

let a = 2;
(function foo() {
    let a = 3;
    console.log(a); // 3
})();

console.log(a); // 2